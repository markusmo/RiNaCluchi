//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18331
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

namespace AssemblyCSharp
{
		public class TakeDownEvent :GameEvent
		{
				public TakeDownEvent (Aircraft ac, int time, int runway):base(ac,time,runway)
				{
				}

				public override void Spawn ()
				{
						Debug.Log ("Take down on Runway " + Runway + " in " + TimeUntil + " Rounds");
						Vector3 position = new Vector3 ();
						switch (Runway) {
						case 1:
								position = SpawnPoint1 ();
								break;
						case 2:
								position = SpawnPoint2 ();
								break;
						case 3:
								position = SpawnPoint3 ();
								break;
						case 4:
								position = SpawnPoint4 ();
								break;
						default:
								break;
						}
						Quaternion z = Quaternion.AngleAxis (90f, new Vector3 (0, 1, 0));
						SpawnController.GetInstance ().SpawnAircraft (Runway, position, z, this.Aircraft);
				}
				
				public override string ToString ()
				{
						return this.Aircraft.Name + " takes down \non runway " + this.Runway;
				}
		}
		
}

